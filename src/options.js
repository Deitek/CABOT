!function(e){var t={};function n(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(o,r,function(t){return e[t]}.bind(null,r));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=5)}([function(e,t,n){"use strict";n.d(t,"b",function(){return o}),n.d(t,"a",function(){return r}),n.d(t,"d",function(){return i}),n.d(t,"c",function(){return u});var o="GitHub Gloc",r="github-gloc",i=5,u={POPUP:["addToken","github","shortName","indexWorksOnly","indexCountsFrom","indexProjectPage","indexUserPage","indexSearchPage","indexTrandingPage","indexEtc","attentionPlease","translateOurApp"],OPTIONS:["optionsTitle","github","shortName","optionsUlDescription","optionsAccess","optionsLimits","optionsCreateToken"]}},function(e,t,n){"use strict";n.d(t,"b",function(){return r}),n.d(t,"c",function(){return i}),n.d(t,"a",function(){return u});var o=n(0),r=function(e,t){switch(e){case"i":console.info(o.b+": "+t);break;case"w":console.warn(o.b+": "+t);break;case"e":console.error(o.b+": "+t);break;default:console.info(t)}},i=function(e){e.map(function(e){document.getElementById(e).innerHTML=chrome.i18n.getMessage(e)})},u=function(e){for(var t in e)if(e.hasOwnProperty(t))return!1;return!0}},,,,function(e,t,n){"use strict";n.r(t);var o=n(1),r=n(0),i=function(e){var t;(t="string"!=typeof e?chrome.i18n.getMessage("optionsTokenMustbeString")+": be62d2235c80b8056h103e8ae03398db9d37d1a0":e.length<30?chrome.i18n.getMessage("optionsTokenWrongLength"):chrome.i18n.getMessage("optionsTokenWalid"))&&(document.getElementById("validation-block").textContent=t)};Object(o.c)(r.c.OPTIONS),document.getElementById("x-gloc-github-token").placeholder=chrome.i18n.getMessage("optionsInputToken"),document.getElementById("save-button").value=chrome.i18n.getMessage("optionsSaveButton"),document.addEventListener("DOMContentLoaded",function(){chrome.storage.sync.get({"x-github-token":""},function(e){var t=e["x-github-token"];document.getElementById("x-gloc-github-token").value=t,i(t)})}),document.getElementById("save-button").addEventListener("click",function(){document.getElementById("save-button").setAttribute("disabled","disabled");var e=document.getElementById("x-gloc-github-token").value;chrome.storage.sync.set({"x-github-token":e},function(){document.getElementById("status-text").textContent=chrome.i18n.getMessage("optionsSaved"),i(e)})})}]);

console.log("HELLO");
//# sourceMappingURL=data:application/json;charset=utf-8;base64,